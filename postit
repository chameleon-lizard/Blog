#!/bin/python

import markdown as md
import datetime
import argparse
import sys
import os

from pathlib import Path

def check_path(path: str) -> bool:
    if path:
        pass
    else:
        print("No directory provided!")
        return False

    path = Path(path)
    if not path.exists() and path.is_dir():
        print("Provided path is incorrect!")
        return False
    return True    

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Post to blog.")
    parser.add_argument("-i", action="store", type=str,
                        help="directory with the blogpost in md format and images in assets folder")
    
    args = parser.parse_args()

    if not check_path(args.i):
        print("Incorrect path.")
        sys.exit()
    else:
        path = Path(args.i)
    
    filepath = 0
    assetspath = 0
    for i in path.iterdir():
        if i.suffix == ".md":
            filepath = i
        elif i.name == "assets":
            assetspath = i
    addr, scp, _ = Path("config").read_text().split("\n")

    body = "<body>\n" + md.markdown(Path(filepath).read_text()) + f'\n<div class="date">{datetime.date.today()}</div>\n</body>\n</html>'
    head = f'<html>\n<head>\n<meta charset="utf-8" />\n<meta name="generator" content="pandoc" />\n<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />\n<title>{filepath.stem}</title>\n<link rel="stylesheet" type="text/css" href="../../blog.css">\n</head>\n'
    html = Path(str(filepath.parent) + "/" + filepath.stem + ".html")
    html.write_text(head + body)

    os.system(f"scp -r {html.parent} {scp}{str(html.parent)}")
    os.system(f"rm {html}")
    
    with Path("blog.md").open("a") as blog:
        blog.write(f"- [{filepath.stem}]({addr}{str(filepath.parent) + '/' + filepath.stem + '.html'}) - {datetime.date.today()}\n")
        
    body = "<body>\n" + md.markdown(Path("blog.md").read_text()) + f"\n</body>\n</html>"
    head = f'<html>\n<head>\n<meta charset="utf-8" />\n<meta name="generator" content="pandoc" />\n<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />\n<title>Blog</title>\n <link rel="stylesheet" type="text/css" href="blog.css">\n</head>\n'
    Path("blog.html").write_text(head + body)
    os.system(f"scp -r blog.html {scp}blog.html")
    os.system("rm blog.html")

